import { app, BrowserWindow, ipcMain } from "electron";
import path from "path";
import url from "url";

function createWindow() {
  const mainWindow = new BrowserWindow({
    width: 1200,
    height: 800,
    webPreferences: {
      preload: path.join(__dirname, "../dist_preload/preload.js"), // Path relative to dist_main/main.js
      contextIsolation: true,
      nodeIntegration: false, // Recommended for security
      devTools: !app.isPackaged, // Enable DevTools only in development
    },
  });

  // Vite builds the renderer to dist_renderer. main.js is in dist_main.
  // So, the path to renderer's index.html is '../dist_renderer/index.html'
  const rendererIndexPath = path.join(__dirname, "../dist_renderer/index.html");

  if (app.isPackaged) {
    mainWindow.loadFile(rendererIndexPath);
  } else {
    // In development, load the file generated by Vite's build.
    // For a smoother dev experience, consider electron-vite or similar tools
    // that integrate Vite's dev server.
    mainWindow.loadURL(
      url.format({
        pathname: rendererIndexPath,
        protocol: "file:",
        slashes: true,
      })
    );
    mainWindow.webContents.openDevTools();
  }

  mainWindow.on("closed", () => {
    // Dereference the window object, usually you would store windows
    // in an array if your app supports multi windows, this is the simplest case.
    // mainWindow = null; // If mainWindow was declared with let
  });
}

app.whenReady().then(() => {
  createWindow();

  app.on("activate", () => {
    if (BrowserWindow.getAllWindows().length === 0) {
      createWindow();
    }
  });
});

app.on("window-all-closed", () => {
  if (process.platform !== "darwin") {
    app.quit();
  }
});

ipcMain.handle("get-app-version", () => {
  return app.getVersion();
});
